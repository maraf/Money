@typeparam T

<button type="button" class="btn btn-primary dropdown-toggle" @onclick="OpenSelectorAsync">
    @Selected?.ToString()
</button>

@if (Previous != null && Previous.Count > 0)
{
    <span class="d-none d-md-inline">
        @foreach (var prev in Previous)
        {
            <a class="btn btn-link" href="@LinkFactory(prev)">
                @prev
            </a>
        }
    </span>
}

<Modal @ref="SelectorModal" Title="Select a period" TitleIcon="calendar" BodyCssClass="p-0">
    <div class="list-group list-group-flush">
        <AutoLoadListView
            Items="@Periods"
            TModel="T"
            LoadingContext="@Loading"
            Context="item"
            PlaceholderCount="@(typeof(T) == typeof(MonthModel) ? 8 : Previous?.Count ?? 6)"
            NoDataTitle="No data."
        >
            <Placeholder WordMaxCount="2" WordMinLength="4" WordMaxLength="10">
                <PlaceholderContent>
                    <a class="list-group-item">
                        @if (typeof(T) == typeof(MonthModel))
                        {
                            <span class="placeholder col-3"></span>
                        }
                        <span class="placeholder col-2"></span>
                    </a>
                </PlaceholderContent>
                <ChildContent>
                    <a @onclick="@(() => SelectorModal.Hide())" href="@LinkFactory(item.Model)" class="list-group-item @(item.Model.Equals(Selected) ? "active" : null)">
                        @item.Model.ToString()
                    </a>
                </ChildContent>
            </Placeholder>
        </AutoLoadListView>
    </div>
</Modal>