<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

  <PropertyGroup>
    <RootNamespace>Money</RootNamespace>
    <PublishDomain>app.money.neptuo.com</PublishDomain>
    <VersionPrefix>1.17.1.0</VersionPrefix>
    <UseBlazorWebAssembly>true</UseBlazorWebAssembly>
    <BlazorWebAssemblyLoadAllGlobalizationData>true</BlazorWebAssemblyLoadAllGlobalizationData>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Blazored.LocalStorage" />
    <PackageReference Include="Blazored.SessionStorage" />
    <PackageReference Include="Microsoft.AspNetCore.Components.Authorization" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" PrivateAssets="all" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR.Client" />
    <PackageReference Include="Microsoft.AspNetCore.WebUtilities" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Money.Accounts.Models\Money.Accounts.Models.csproj" />
    <ProjectReference Include="..\Money.Accounts\Money.Accounts.csproj" />
    <ProjectReference Include="..\Money.Api.Shared\Money.Api.Shared.csproj" />
    <ProjectReference Include="..\Money.Models\Money.Models.csproj" />
    <ProjectReference Include="..\Money\Money.csproj" />
    <ProjectReference Include="..\Neptuo\Neptuo.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="wwwroot\index.html" CopyToOutputDirectory="PreserveNewest" />
    <Content Remove="**\*.svg" />
    <Compile Update="**\*.razor.cs" DependentUpon="%(Filename)" />
    <None Update="**\*.json.defaults" DependentUpon="%(Filename)" />
    <Watch Include="**\*.razor" />
  </ItemGroup>

  <!-- PWA -->
  <PropertyGroup>
    <ServiceWorkerAssetsManifest>service-worker-assets.js</ServiceWorkerAssetsManifest>
  </PropertyGroup>
  <ItemGroup>
    <ServiceWorker Include="wwwroot\service-worker.js" PublishedContent="wwwroot\service-worker.published.js" />
  </ItemGroup>

  <Target Name="CompileScss">
    <PropertyGroup>
      <CssRootFolder>$([MSBuild]::NormalizeDirectory('$(MSBuildProjectDirectory)', 'wwwroot', 'css'))</CssRootFolder>
      <WebCompilerConfigPath>$([MSBuild]::NormalizePath('$(MSBuildProjectDirectory)', 'webcompilerconfiguration.json'))</WebCompilerConfigPath>
    </PropertyGroup>
    <Exec Command="dotnet webcompiler -r $(CssRootFolder) -c $(WebCompilerConfigPath)" />
  </Target>

  <!-- GitHubPages publish -->
  <Target Name="PublishGitHubFiles" AfterTargets="ComputeFilesToPublish">
    <!-- Declare -->
    <PropertyGroup>
      <Wwwroot>wwwroot</Wwwroot>
      <CName>$(Wwwroot)\CNAME</CName>
      <Html404>$(Wwwroot)\404.html</Html404>
      <NoJekyll>$(Wwwroot)\.nojekyll</NoJekyll>
    </PropertyGroup>

    <!-- Create content -->
    <Copy SourceFiles="wwwroot\index.html" DestinationFiles="$(OutputPath)$(Html404)" />
    <WriteLinesToFile File="$(OutputPath)$(CName)" Lines="$(PublishDomain)" Overwrite="true" />
    <WriteLinesToFile File="$(OutputPath)$(NoJekyll)" Lines="" Overwrite="true" />

    <!-- Publish -->
    <ItemGroup>
      <CustomPublishFile Include="$(OutputPath)$(CName)" RelativePath="$(CName)" />
      <CustomPublishFile Include="$(OutputPath)$(Html404)" RelativePath="$(Html404)" />
      <CustomPublishFile Include="$(OutputPath)$(NoJekyll)" RelativePath="$(NoJekyll)" />

      <ResolvedFileToPublish Include="@(CustomPublishFile->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(CustomPublishFile.RelativePath)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
